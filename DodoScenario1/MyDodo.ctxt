#BlueJ class context
comment0.target=MyDodo
comment0.text=\r\n\r\n\ @author\ Sjaak\ Smetsers\ &\ Renske\ Smetsers-Weeda\r\n\ @version\ 3.0\ --\ 20-01-2017\r\n
comment1.params=
comment1.target=MyDodo()
comment10.params=
comment10.target=void\ pickUpGrainsAndPrintCoordinates()
comment10.text=\r\n\ verytime\ it\ picks\ up\ grains\ it\ also\ prints\ where\ it\ was\ found\r\n
comment11.params=
comment11.target=void\ goBackToStartOfRowAndFaceBack()
comment12.params=
comment12.target=void\ walkToWorldEdgeClimbingOverFences()
comment13.params=
comment13.target=boolean\ canLayEgg()
comment13.text=\r\n\ Test\ if\ Dodo\ can\ lay\ an\ egg.\r\n\ \ \ \ \ \ \ \ \ \ (there\ is\ not\ already\ an\ egg\ in\ the\ cell)\r\n\ \r\n\ <p>\ Initial\:\ Dodo\ is\ somewhere\ in\ the\ world\r\n\ <p>\ Final\:\ \ \ Same\ as\ initial\ situation\r\n\ \r\n\ @return\ boolean\ true\ if\ Dodo\ can\ lay\ an\ egg\ (no\ egg\ there)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ if\ Dodo\ can't\ lay\ an\ egg\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (already\ an\ egg\ in\ the\ cell)\r\n
comment14.params=
comment14.target=void\ turn180()
comment14.text=\r\n\ dodo\ will\ start\ to\ look\ backwards\r\n
comment15.params=
comment15.target=void\ climbOverFence()
comment15.text=\r\n\ goes\ around\ the\ fence\ by\ turning\ alot\ of\ ways\r\n
comment16.params=
comment16.target=boolean\ grainAhead()
comment16.text=\r\n\ moves\ forward\ chcks\ for\ grain\ and\ goes\ back\r\n
comment17.params=
comment17.target=void\ stepOneCellBackwards()
comment17.text=\r\n\ turns\ 180\ moves\ and\ turns\ 180\ again\r\n
comment18.params=
comment18.target=boolean\ eggFinder()
comment18.text=\r\n\ just\ checks\ if\ doo\ is\ on\ the\ egg\ or\ not\r\n
comment19.params=
comment19.target=Egg\ findEgg()
comment19.text=\r\n\ this\ picks\ up\ all\ the\ egg\ objects\ in\ the\ world\r\n
comment2.params=
comment2.target=void\ act()
comment20.params=
comment20.target=void\ collectAllEggs()
comment20.text=\r\n\ this\ is\ the\ finished\ product\ where\ it\ picks\ up\ all\ the\ eggs\ (since\ the\ moving\ limit\ is\ 20\ it\ will\ pick\ up\ the\ nearest\ eggs)\r\n
comment21.params=
comment21.target=Egg\ getClosestEgg()
comment21.text=\r\n\ with\ this\ i'm\ able\ to\ check\ for\ the\ nearest\ eggs\ from\ dodo\ to\ egg\r\n
comment22.params=
comment22.target=void\ lowerSteps()
comment22.text=\r\n\ \ this\ is\ so\ the\ amount\ of\ steps\ left\ are\ lowered\ everytime\ it\ moves\r\n
comment23.params=coordX\ coordY
comment23.target=void\ gotoLocation(int,\ int)
comment23.text=\r\n\ gotolocation\ asks\ first\ for\ x\ input\ and\ y\ input\ and\ if\ you\ put\ those\ 2\ in\ the\ it\ goes\ to\ that\ coordinates\r\n
comment24.params=
comment24.target=void\ turnLeftDodo()
comment24.text=\r\n\ turns\ left\r\n
comment25.params=
comment25.target=void\ turnRightDodo()
comment25.text=\r\n\ turns\ right\r\n
comment26.params=
comment26.target=void\ faceEast()
comment26.text=\r\n\ starts\ turning\ until\ its\ facing\ east\ then\ it\ stops\r\n
comment27.params=
comment27.target=void\ walkingArounFencedArea()
comment27.text=\r\n\ \r\n
comment28.params=
comment28.target=void\ NestFiller()
comment28.text=\r\n\ \ walks\ in\ a\ straight\ line\ and\ lays\ eggs\ if\ hes\ on\ a\ nest\ that\ doesnt\ have\ a\ egg\ in\ it\r\n
comment29.params=
comment29.target=void\ nestFillerAvoidingFences()
comment29.text=\r\n\ just\ like\ nest\ filler\ but\ if\ there\ is\ a\ fence\ ahead\ then\ it\ hops\ over\ it\r\n
comment3.params=
comment3.target=void\ move()
comment3.text=\r\n\ Move\ one\ cell\ forward\ in\ the\ current\ direction.\r\n\ \r\n\ <P>\ Initial\:\ Dodo\ is\ somewhere\ in\ the\ world\r\n\ <P>\ Final\:\ If\ possible,\ Dodo\ has\ moved\ forward\ one\ cell\r\n\r\n
comment30.params=
comment30.target=void\ eggTrailToNest()
comment30.text=\r\n\ follows\ the\ eggs\ towards\ the\ nest\r\n
comment31.params=
comment31.target=void\ mazeSolver()
comment31.text=\r\n\ in\ this\ code\ it\ tries\ to\ solve\ a\ maze\ untill\ it\ reaches\ the\ nest\r\n
comment32.params=
comment32.target=int\ amountOfEggs()
comment32.text=\r\n\ picks\ up\ egg\ objects\ in\ the\ world\r\n
comment33.params=
comment33.target=void\ amountOfBlueEggs()
comment33.text=\r\n\ picks\ up\ just\ the\ blue\ egg\ objects\r\n
comment34.params=direction
comment34.target=void\ faceDirection(int)
comment34.text=\r\n\ turns\ left\ until\ it\ looks\ the\ way\ you\ want\ it\ to\ look\ (the\ one\ you\ input\ like\ South)\r\n
comment35.params=
comment35.target=void\ goDown()
comment35.text=\r\n\ turns\ left\ until\ its\ looking\ down\ then\ moves\ and\ looks\ back\ towards\ east\r\n
comment36.params=
comment36.target=void\ monumentOfEggs()
comment36.text=\r\n\ goes\ to\ 0,\ 0\ and\ starts\ making\ a\ staircase\r\n
comment37.params=
comment37.target=void\ monumentOfEggs2()
comment37.text=\r\n\ starts\ making\ a\ staircase\ multiplicitifly\ so\ if\ it\ places\ 1\ then\ next\ row\ 2\ then\ 4\ etc\r\n
comment38.params=
comment38.target=void\ monumentOfEggs3()
comment38.text=\r\n\ goes\ up\ somewhere\ in\ the\ middle\ and\ starts\ to\ make\ a\ pyramid\ until\ it\ cant\r\n
comment4.params=
comment4.target=boolean\ canMove()
comment4.text=\r\n\ Test\ if\ Dodo\ can\ move\ forward,\ (there\ are\ no\ obstructions\r\n\ \ \ \ or\ end\ of\ world\ in\ the\ cell\ in\ front\ of\ her).\r\n\ \r\n\ <p>\ Initial\:\ Dodo\ is\ somewhere\ in\ the\ world\r\n\ <p>\ Final\:\ \ \ Same\ as\ initial\ situation\r\n\ \r\n\ @return\ boolean\ true\ if\ Dodo\ can\ move\ (no\ obstructions\ ahead)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ if\ Dodo\ can't\ move\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (an\ obstruction\ or\ end\ of\ world\ ahead)\r\n
comment5.params=
comment5.target=void\ hatchEgg()
comment5.text=\r\n\ Hatches\ the\ egg\ in\ the\ current\ cell\ by\ removing\r\n\ the\ egg\ from\ the\ cell.\r\n\ Gives\ an\ error\ message\ if\ there\ is\ no\ egg\r\n\ \r\n\ <p>\ Initial\:\ Dodo\ is\ somewhere\ in\ the\ world.\ There\ is\ an\ egg\ in\ Dodo's\ cell.\r\n\ <p>\ Final\:\ Dodo\ is\ in\ the\ same\ cell.\ The\ egg\ has\ been\ removed\ (hatched).\ \ \ \ \ \r\n
comment6.params=
comment6.target=int\ getNrOfEggsHatched()
comment6.text=\r\n\ Returns\ the\ number\ of\ eggs\ Dodo\ has\ hatched\ so\ far.\r\n\ \r\n\ @return\ int\ number\ of\ eggs\ hatched\ by\ Dodo\r\n
comment7.params=distance
comment7.target=void\ jump(int)
comment7.text=\r\n\ Move\ given\ number\ of\ cells\ forward\ in\ the\ current\ direction.\r\n\ \r\n\ <p>\ Initial\:\ \ \ \r\n\ <p>\ Final\:\ \ \r\n\ \r\n\ @param\ \ \ int\ distance\:\ the\ number\ of\ steps\ made\r\n
comment8.params=distance
comment8.target=void\ layTrailOfEggs(int)
comment9.params=
comment9.target=void\ walkToWorldEdgePrintingCoordinates()
comment9.text=\r\n\ Walks\ to\ edge\ of\ the\ world\ printing\ the\ coordinates\ at\ each\ step\r\n\ \r\n\ <p>\ Initial\:\ Dodo\ is\ on\ West\ side\ of\ world\ facing\ East.\r\n\ <p>\ Final\:\ \ \ Dodo\ is\ on\ East\ side\ of\ world\ facing\ East.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ Coordinates\ of\ each\ cell\ printed\ in\ the\ console.\r\n
numComments=39
